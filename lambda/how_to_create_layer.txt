# Lambda Layerの作成手順

AWSでLambda関数用のLayer (rawpy & imageioを含む) を作成するための手順です。
ローカルでのビルドが難しい場合は、以下の方法でAWS上に直接作成することができます。

## 手順1: EC2インスタンスの起動

1. AWSコンソールからEC2インスタンスを起動
   - Amazon Linux 2023 AMIを選択
   - t2.micro（無料枠）で十分
   - セキュリティグループでSSH（22）を許可

## 手順2: EC2インスタンスにSSH接続

```bash
ssh -i your-key.pem ec2-user@your-instance-ip
```

## 手順3: 必要なツールのインストール

```bash
# 基本ツールと開発環境
sudo yum update -y
sudo yum install -y git zip unzip python3 python3-pip python3-devel

# コンパイル用ツール
sudo yum install -y gcc gcc-c++ make cmake libtiff-devel libjpeg-devel libpng-devel
```

## 手順4: Python環境の準備

```bash
# ディレクトリ作成
mkdir -p ~/lambda-layer/python

# 必要なライブラリをインストール
pip3 install --target ~/lambda-layer/python boto3==1.34.15 rawpy==0.24.0 imageio==2.33.0 pillow==10.2.0
```

## 手順5: レイヤーパッケージの作成

```bash
cd ~/lambda-layer
zip -r raw-processing-layer.zip python/
```

## 手順6: ローカルマシンへファイルを転送

ローカルマシンでの実行:

```bash
scp -i your-key.pem ec2-user@your-instance-ip:~/lambda-layer/raw-processing-layer.zip .
```

## 手順7: AWS Lambdaレイヤーの作成

1. AWS Lambdaコンソールで「レイヤー」に移動
2. 「レイヤーの作成」をクリック
3. 名前に「raw-processing-layer」と入力
4. ダウンロードしたzipファイルをアップロード
5. 互換ランタイムに「Python 3.13」を選択
6. 「作成」をクリック

## 手順8: Lambda関数にレイヤーを追加

1. Lambda関数「photo-upload-s3-app」の詳細ページを開く
2. 「レイヤー」セクションに移動
3. 「レイヤーの追加」をクリック
4. 先ほど作成したレイヤーを選択
5. 「追加」をクリック

## 手順9: デプロイパッケージの作成

```bash
# lambda_function.pyだけをzip化
zip photo-upload-s3-app-lambda.zip lambda_function.py
```

## 手順10: Lambda関数設定

- ランタイム: Python 3.13
- ハンドラ: lambda_function.lambda_handler
- メモリ: 2048MB
- タイムアウト: 60秒

## 重要な注意点

- rawpyは複雑なネイティブ依存関係があり、Lambda環境でのコンパイルには適切な環境が必要です
- ARM64アーキテクチャ(Graviton)のLambdaを使用する場合は、同じアーキテクチャ上でレイヤーをビルドする必要があります
- メモリ設定は大きなRAWファイルを処理するために十分な値を設定してください（2048MB以上推奨）
- EC2インスタンスの使用が完了したら、コスト削減のためにインスタンスを停止または終了することを忘れないでください